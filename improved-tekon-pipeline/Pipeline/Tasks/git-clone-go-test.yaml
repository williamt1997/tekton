apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: golang-test
  namespace: tekton-will
  labels:
    app.kubernetes.io/version: "0.3"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/displayName: "golang build"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task is Golang task to build Go projects.

  params:
  - name: package
    description: base package to build in
  - name: CGO_ENABLED
    description: "Toggle cgo tool during Go build. Use value '0' to disable cgo (for static builds)."
    default: ""
  - name: GOSUMDB
    description: "Go checksum database url. Use value 'off' to disable checksum validation."
    default: ""
  workspaces:
  - name: source
  sidecars:
    - name: postgres-test
      image: postgres:latest
      env:
        - name: POSTGRES_PASSWORD
          value: test
        - name: POSTGRES_USER
          value: test
        - name: POSTGRES_DB
          value: test
      ports:
        - containerPort: 5432
          hostPort: 8082
      args: ["-p", "8082"]
      readinessProbe:
        exec:
          command: ["pg_isready", "-U", "test", "-p", "8082"]
        initialDelaySeconds: 5
        periodSeconds: 10
  steps:
  - name: build
    image: golang:latest
    workingDir: $(workspaces.source.path)
    script: |
      apt-get update && apt-get install -y postgresql-client
      
      if [ ! -e $GOPATH/src/$(params.package)/go.mod ];then
        SRC_PATH="$GOPATH/src/$(params.package)"
        mkdir -p $SRC_PATH
        cp -R "$(workspaces.source.path)"/* $SRC_PATH
        cd $SRC_PATH
      fi

      echo "Waiting for PostgreSQL to be ready..."
      until pg_isready -h localhost -U test -p 8082; do sleep 2; done
      echo "PostgreSQL is ready!"
      
      go test ./test
    env:
    - name: GOOS
      value: linux
    - name: GOARCH
      value: amd64
    - name: GO111MODULE
      value: auto